PairsToStdhepLCIO
Converting GuineaPig pairs.dat files to Stdhep or LCIO

---------------------------------------------------------------
Required libraries:
hep.io.stdhep.StdhepBeginRun;
hep.io.stdhep.StdhepEndRun;
hep.io.stdhep.StdhepEvent;
hep.io.stdhep.StdhepWriter;

hep.lcio.event.LCIO;
hep.lcio.implementation.event.ILCCollection;
hep.lcio.implementation.event.ILCEvent;
hep.lcio.implementation.event.IMCParticle;
hep.lcio.implementation.io.LCFactory;
hep.lcio.io.LCWriter;

java.io.BufferedReader;
java.io.File;
java.io.FileInputStream;
java.io.FileReader;
java.io.IOException;
java.io.InputStreamReader;
java.util.Scanner;
java.util.StringTokenizer;

These libraries are included in e.g. the following jar-files:
freehep-mcfio-2.0.1.jar
freehep-xdr-2.0.7.jar
freehep-stdhep-2.0.1.jar
lcsim-distribution-3.1.3-bin.jar
lcio.jar
---------------------------------------------------------------
For compiling:
javac -cp bin:lib/* src/PairsToStdhepLCIO.java 

Here, the java file is stored in the subfolder src.
The flag -cp gives the path to the class file (here in the bin folder) and the needed libraries (i.e. the jar files). Unlike for the class file, the libraries have to be directly named (not only the folder where they are included in). This is here done by addressing all jar files (*) in the lib folder. 
The classpath needs to be adjusted appropriately to your paths.


For running:
java -cp bin:lib/* PairsToStdhepLCIO -i pairs.dat -o output<.lcio / .stdhep>


There are also more options available e.g. for applying cuts on p_T and theta.

See usage by typing:
java -cp bin:lib/* PairsToStdhepLCIO -h
